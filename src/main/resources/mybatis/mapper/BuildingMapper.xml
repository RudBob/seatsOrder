<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.BuildingMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.bean.Building" >
    <id column="bid" property="bid" jdbcType="INTEGER" />
    <result column="bName" property="bName" jdbcType="VARCHAR" />
    <result column="max_floor" property="maxFloor" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Base_Column_List" >
    bid, bName, max_floor, state
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from building
    where bid = #{bid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from building
    where bid = #{bid,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.example.demo.bean.Building" >
    insert into building (bid, bName, max_floor,
      state)
    values (#{bid,jdbcType=INTEGER}, #{bName,jdbcType=VARCHAR}, #{maxFloor,jdbcType=INTEGER},
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.bean.Building" >
    insert into building
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bid != null" >
        bid,
      </if>
      <if test="bName != null" >
        bName,
      </if>
      <if test="maxFloor != null" >
        max_floor,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bid != null" >
        #{bid,jdbcType=INTEGER},
      </if>
      <if test="bName != null" >
        #{bName,jdbcType=VARCHAR},
      </if>
      <if test="maxFloor != null" >
        #{maxFloor,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.bean.Building" >
    update building
    <set >
      <if test="bName != null" >
        bName = #{bName,jdbcType=VARCHAR},
      </if>
      <if test="maxFloor != null" >
        max_floor = #{maxFloor,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where bid = #{bid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.bean.Building" >
    update building
    set bName = #{bName,jdbcType=VARCHAR},
      max_floor = #{maxFloor,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER}
    where bid = #{bid,jdbcType=INTEGER}
  </update>
</mapper>